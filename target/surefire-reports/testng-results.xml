<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="4" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-12-09T10:59:53Z" name="Suite" finished-at="2023-12-09T11:01:12Z" duration-ms="78862">
    <groups>
      <group name="ErrorHandling">
        <method signature="ErrorValidation.loginErrorValidation()[pri:0, instance:FrameworkPractice.Test.ErrorValidation@2a62b5bc]" name="loginErrorValidation" class="FrameworkPractice.Test.ErrorValidation"/>
      </group> <!-- ErrorHandling -->
      <group name="purchase">
        <method signature="SubmitOrderTest.submitOrder(java.util.HashMap)[pri:0, instance:FrameworkPractice.Test.SubmitOrderTest@77825085]" name="submitOrder" class="FrameworkPractice.Test.SubmitOrderTest"/>
      </group> <!-- purchase -->
    </groups>
    <test started-at="2023-12-09T10:59:53Z" name="Error Validation login" finished-at="2023-12-09T11:01:02Z" duration-ms="68244">
      <class name="FrameworkPractice.Test.ErrorValidation">
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:FrameworkPractice.Test.ErrorValidation@2a62b5bc]" started-at="2023-12-09T10:59:53Z" name="lunchApplication" finished-at="2023-12-09T11:00:24Z" duration-ms="30426" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="loginErrorValidation()[pri:0, instance:FrameworkPractice.Test.ErrorValidation@2a62b5bc]" started-at="2023-12-09T11:00:24Z" name="loginErrorValidation" finished-at="2023-12-09T11:00:25Z" duration-ms="769" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email password]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email password]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at FrameworkPractice.Test.ErrorValidation.loginErrorValidation(ErrorValidation.java:35)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:842)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:FrameworkPractice.Test.ErrorValidation@2a62b5bc]" started-at="2023-12-09T11:00:25Z" name="tearDown" finished-at="2023-12-09T11:00:25Z" duration-ms="278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:FrameworkPractice.Test.ErrorValidation@2a62b5bc]" started-at="2023-12-09T11:00:25Z" name="lunchApplication" finished-at="2023-12-09T11:00:31Z" duration-ms="5736" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="loginErrorValidation()[pri:0, instance:FrameworkPractice.Test.ErrorValidation@2a62b5bc]" started-at="2023-12-09T11:00:31Z" name="loginErrorValidation" finished-at="2023-12-09T11:00:31Z" duration-ms="552" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email password]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email password]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at FrameworkPractice.Test.ErrorValidation.loginErrorValidation(ErrorValidation.java:35)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:842)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:FrameworkPractice.Test.ErrorValidation@2a62b5bc]" started-at="2023-12-09T11:00:32Z" name="tearDown" finished-at="2023-12-09T11:00:32Z" duration-ms="327" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:FrameworkPractice.Test.ErrorValidation@2a62b5bc]" started-at="2023-12-09T11:00:32Z" name="lunchApplication" finished-at="2023-12-09T11:00:38Z" duration-ms="5932" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="searchProductValidation()[pri:0, instance:FrameworkPractice.Test.ErrorValidation@2a62b5bc]" started-at="2023-12-09T11:00:38Z" name="searchProductValidation" finished-at="2023-12-09T11:01:01Z" duration-ms="23608" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchProductValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:FrameworkPractice.Test.ErrorValidation@2a62b5bc]" started-at="2023-12-09T11:01:01Z" name="tearDown" finished-at="2023-12-09T11:01:02Z" duration-ms="122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- FrameworkPractice.Test.ErrorValidation -->
    </test> <!-- Error Validation login -->
    <test started-at="2023-12-09T10:59:53Z" name="Submit order " finished-at="2023-12-09T11:01:12Z" duration-ms="78862">
      <class name="FrameworkPractice.Test.SubmitOrderTest">
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:FrameworkPractice.Test.SubmitOrderTest@77825085]" started-at="2023-12-09T10:59:55Z" name="lunchApplication" finished-at="2023-12-09T11:00:23Z" duration-ms="28781" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:FrameworkPractice.Test.SubmitOrderTest@77825085]" started-at="2023-12-09T11:00:23Z" name="submitOrder" data-provider="getData" finished-at="2023-12-09T11:00:44Z" duration-ms="20162" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Naresh@12345, product=Zara coat 3, emailID=naresh12345@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:FrameworkPractice.Test.SubmitOrderTest@77825085]" started-at="2023-12-09T11:00:44Z" name="tearDown" finished-at="2023-12-09T11:00:44Z" duration-ms="350" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:FrameworkPractice.Test.SubmitOrderTest@77825085]" started-at="2023-12-09T11:00:44Z" name="lunchApplication" finished-at="2023-12-09T11:00:48Z" duration-ms="4314" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:FrameworkPractice.Test.SubmitOrderTest@77825085]" started-at="2023-12-09T11:00:48Z" name="submitOrder" data-provider="getData" finished-at="2023-12-09T11:01:08Z" duration-ms="19714" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Naresh@12345, product=ADIDAS ORIGINAL, emailID=testnaresh_123@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:FrameworkPractice.Test.SubmitOrderTest@77825085]" started-at="2023-12-09T11:01:08Z" name="tearDown" finished-at="2023-12-09T11:01:08Z" duration-ms="184" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:FrameworkPractice.Test.SubmitOrderTest@77825085]" started-at="2023-12-09T11:01:08Z" name="lunchApplication" finished-at="2023-12-09T11:01:11Z" duration-ms="3331" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="orderProductDisplayed()[pri:0, instance:FrameworkPractice.Test.SubmitOrderTest@77825085]" started-at="2023-12-09T11:01:11Z" name="orderProductDisplayed" finished-at="2023-12-09T11:01:12Z" depends-on-methods="FrameworkPractice.Test.SubmitOrderTest.submitOrder" duration-ms="685" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderProductDisplayed -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:FrameworkPractice.Test.SubmitOrderTest@77825085]" started-at="2023-12-09T11:01:12Z" name="tearDown" finished-at="2023-12-09T11:01:12Z" duration-ms="135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- FrameworkPractice.Test.SubmitOrderTest -->
    </test> <!-- Submit order  -->
  </suite> <!-- Suite -->
</testng-results>
