<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="4" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-12-03T12:19:08Z" name="Suite" finished-at="2023-12-03T12:20:09Z" duration-ms="61087">
    <groups>
      <group name="ErrorHandling">
        <method signature="ErrorValidation.loginErrorValidation()[pri:0, instance:FrameworkPractice.Test.ErrorValidation@134d26af]" name="loginErrorValidation" class="FrameworkPractice.Test.ErrorValidation"/>
      </group> <!-- ErrorHandling -->
      <group name="purchase">
        <method signature="SubmitOrderTest.submitOrder(java.util.HashMap)[pri:0, instance:FrameworkPractice.Test.SubmitOrderTest@e54303]" name="submitOrder" class="FrameworkPractice.Test.SubmitOrderTest"/>
      </group> <!-- purchase -->
    </groups>
    <test started-at="2023-12-03T12:19:08Z" name="Error Validation login" finished-at="2023-12-03T12:19:54Z" duration-ms="45914">
      <class name="FrameworkPractice.Test.ErrorValidation">
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:FrameworkPractice.Test.ErrorValidation@134d26af]" started-at="2023-12-03T12:19:08Z" name="lunchApplication" finished-at="2023-12-03T12:19:19Z" duration-ms="10913" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="loginErrorValidation()[pri:0, instance:FrameworkPractice.Test.ErrorValidation@134d26af]" started-at="2023-12-03T12:19:19Z" name="loginErrorValidation" finished-at="2023-12-03T12:19:20Z" duration-ms="874" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email password]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email password]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at FrameworkPractice.Test.ErrorValidation.loginErrorValidation(ErrorValidation.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:FrameworkPractice.Test.ErrorValidation@134d26af]" started-at="2023-12-03T12:19:20Z" name="tearDown" finished-at="2023-12-03T12:19:20Z" duration-ms="211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:FrameworkPractice.Test.ErrorValidation@134d26af]" started-at="2023-12-03T12:19:20Z" name="lunchApplication" finished-at="2023-12-03T12:19:24Z" duration-ms="4509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="loginErrorValidation()[pri:0, instance:FrameworkPractice.Test.ErrorValidation@134d26af]" started-at="2023-12-03T12:19:24Z" name="loginErrorValidation" finished-at="2023-12-03T12:19:25Z" duration-ms="686" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email password]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email password]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at FrameworkPractice.Test.ErrorValidation.loginErrorValidation(ErrorValidation.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:FrameworkPractice.Test.ErrorValidation@134d26af]" started-at="2023-12-03T12:19:25Z" name="tearDown" finished-at="2023-12-03T12:19:26Z" duration-ms="222" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:FrameworkPractice.Test.ErrorValidation@134d26af]" started-at="2023-12-03T12:19:26Z" name="lunchApplication" finished-at="2023-12-03T12:19:28Z" duration-ms="2276" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="searchProductValidation()[pri:0, instance:FrameworkPractice.Test.ErrorValidation@134d26af]" started-at="2023-12-03T12:19:28Z" name="searchProductValidation" finished-at="2023-12-03T12:19:53Z" duration-ms="25371" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchProductValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:FrameworkPractice.Test.ErrorValidation@134d26af]" started-at="2023-12-03T12:19:53Z" name="tearDown" finished-at="2023-12-03T12:19:54Z" duration-ms="298" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- FrameworkPractice.Test.ErrorValidation -->
    </test> <!-- Error Validation login -->
    <test started-at="2023-12-03T12:19:08Z" name="Submit order " finished-at="2023-12-03T12:20:09Z" duration-ms="61087">
      <class name="FrameworkPractice.Test.SubmitOrderTest">
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:FrameworkPractice.Test.SubmitOrderTest@e54303]" started-at="2023-12-03T12:19:08Z" name="lunchApplication" finished-at="2023-12-03T12:19:18Z" duration-ms="10259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:FrameworkPractice.Test.SubmitOrderTest@e54303]" started-at="2023-12-03T12:19:18Z" name="submitOrder" data-provider="getData" finished-at="2023-12-03T12:19:38Z" duration-ms="19952" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Naresh@12345, product=Zara coat 3, emailID=naresh12345@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:FrameworkPractice.Test.SubmitOrderTest@e54303]" started-at="2023-12-03T12:19:38Z" name="tearDown" finished-at="2023-12-03T12:19:39Z" duration-ms="409" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:FrameworkPractice.Test.SubmitOrderTest@e54303]" started-at="2023-12-03T12:19:39Z" name="lunchApplication" finished-at="2023-12-03T12:19:43Z" duration-ms="4724" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:FrameworkPractice.Test.SubmitOrderTest@e54303]" started-at="2023-12-03T12:19:43Z" name="submitOrder" data-provider="getData" finished-at="2023-12-03T12:20:03Z" duration-ms="20039" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Naresh@12345, product=ADIDAS ORIGINAL, emailID=testnaresh_123@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:FrameworkPractice.Test.SubmitOrderTest@e54303]" started-at="2023-12-03T12:20:03Z" name="tearDown" finished-at="2023-12-03T12:20:04Z" duration-ms="229" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:FrameworkPractice.Test.SubmitOrderTest@e54303]" started-at="2023-12-03T12:20:04Z" name="lunchApplication" finished-at="2023-12-03T12:20:08Z" duration-ms="3964" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="orderProductDisplayed()[pri:0, instance:FrameworkPractice.Test.SubmitOrderTest@e54303]" started-at="2023-12-03T12:20:08Z" name="orderProductDisplayed" finished-at="2023-12-03T12:20:09Z" depends-on-methods="FrameworkPractice.Test.SubmitOrderTest.submitOrder" duration-ms="950" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderProductDisplayed -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:FrameworkPractice.Test.SubmitOrderTest@e54303]" started-at="2023-12-03T12:20:09Z" name="tearDown" finished-at="2023-12-03T12:20:09Z" duration-ms="141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- FrameworkPractice.Test.SubmitOrderTest -->
    </test> <!-- Submit order  -->
  </suite> <!-- Suite -->
</testng-results>
